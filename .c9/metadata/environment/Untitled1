{"changed":true,"filter":false,"title":"Untitled1","tooltip":"/Untitled1","value":"# def detect_anomaly():\n#   for record in event['Records']:\n#         bucket_name = record['s3']['bucket']['name']\n#         object_key = record['s3']['object']['key']\n#         event_name = record['eventName']\n        \n#         # bucket_name = 'rong-test-0512'\n#         # file_key = 'energy.csv'\n    \n#         # 讀取 CSV 檔案\n#         response = s3.get_object(Bucket=bucket_name, Key=object_key)\n#         csv_content = response['Body'].read().decode('utf-8')\n        \n#         # 將 CSV 轉換為 JSON 格式\n#         csv_rows = csv.DictReader(io.StringIO(csv_content))\n#         # json_output = json.dumps([row for row in csv_rows])\n#         # print(json_output)\n        \n#         for row in csv_rows:\n#             score = float(row['anomaly_score'])\n#             if score > 1:\n#                 date = row['Date']\n#                 Target = row['Target']\n#                 value = row['Value (kWh)']\n#                 prompt = f\"As an energy management expert with over 30 years of experience, we're reaching out to you for assistance in analyzing anomalous data related to building energy consumption. Your insights are invaluable in resolving this issue.\\n\\n\" \\\n#              f\"Item: {Target}\\n\" \\\n#              f\"Date: {date}\\n\" \\\n#              f\"Energy Consumption Value: {value} kWh\\n\" \\\n#              f\"Anomaly Score: {score}\\n\\n\" \\\n#                      f\"Please provide the following:\\n\\n\" \\\n#              f\"1. Brief summary of the anomaly, including how the energy consumption value deviates from normal patterns.\\n\\n\" \\\n#              f\"2. Analysis of possible causes for the anomaly.\\n\" \\\n#              f\"3. Steps for further investigation.\\n\" \\\n#              f\"4. Recommended methods to address and resolve the issue.\\n\\n\" \\\n#              f\"Your suggestions should be detailed and specific to effectively address the anomaly.\"\n    \n                \n#             # 建立 Bedrock 客戶端\n#             bedrock = boto3.client(\n#                 service_name='bedrock-runtime'#,\n#                 # region_name='us-west-2'\n#             )  \n        \n            \n#             # 設置 Bedrock 模型的輸入參數\n#             input_data = {\n#                 \"modelId\": bedrock_model_id,  # \"cohere.command-text-v14\",\n#                 \"contentType\": \"application/json\",\n#                 \"accept\": \"*/*\",\n#                 \"body\": {\n#                     \"prompt\": prompt,\n#                     \"max_tokens\": 1000,\n#                     \"temperature\": 0.75,\n#                     \"p\": 0.01,\n#                     \"k\": 0,\n#                     \"stop_sequences\": [],\n#                     \"return_likelihoods\": \"NONE\"\n#                 }\n#             }\n            \n#             # Call Bedrock model\n#             response = bedrock.invoke_model(\n#                 body=json.dumps(input_data[\"body\"]),\n#                 modelId=input_data[\"modelId\"],\n#                 accept=input_data[\"accept\"],\n#                 contentType=input_data[\"contentType\"]\n#             )\n        \n#             # Parse Bedrock response\n#             response_body = json.loads(response['body'].read())\n#             explanation = response_body['generations'][0]['text']    \n#             print(explanation)\n            \n#             return explanation \n\n\n    You are an energy analyst assistant. Your task is to analyze weekly energy consumption data from a CSV file and generate a succinct weekly energy usage report. The report should include:\n        \n    1. A summary of the total energy consumption for the week, compared to the previous week and the 4-week average.\n    2. Identification of any abnormal usage patterns, such as significant spikes or drops in consumption on particular days.\n    3. Potential reasons for abnormal patterns, such as weather events, operational changes, faulty equipment, etc. Provide relevant recommendations to address any issues.\n    4. Energy usage highlights, such as days with highest/lowest consumption, top consuming facilities, etc.\n    5. Forecasts for energy needs in the upcoming week based on historical data and known factors.\n        \n    Here is the weekly energy consumption data in JSON format:\n        \n    {json_output}\n    \n    Please generate the weekly energy usage report based on the data provided, following the guidelines outlined above. Keep the report concise, focused and insightful.\n    \n    \n    # 'anthropic.claude-v2:1' \n     # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-function-s3.html\n     # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api\n","undoManager":{"mark":-2,"position":11,"stack":[[{"start":{"row":0,"column":0},"end":{"row":73,"column":33},"action":"insert","lines":["# def detect_anomaly():","#   for record in event['Records']:","#         bucket_name = record['s3']['bucket']['name']","#         object_key = record['s3']['object']['key']","#         event_name = record['eventName']","        ","#         # bucket_name = 'rong-test-0512'","#         # file_key = 'energy.csv'","    ","#         # 讀取 CSV 檔案","#         response = s3.get_object(Bucket=bucket_name, Key=object_key)","#         csv_content = response['Body'].read().decode('utf-8')","        ","#         # 將 CSV 轉換為 JSON 格式","#         csv_rows = csv.DictReader(io.StringIO(csv_content))","#         # json_output = json.dumps([row for row in csv_rows])","#         # print(json_output)","        ","#         for row in csv_rows:","#             score = float(row['anomaly_score'])","#             if score > 1:","#                 date = row['Date']","#                 Target = row['Target']","#                 value = row['Value (kWh)']","#                 prompt = f\"As an energy management expert with over 30 years of experience, we're reaching out to you for assistance in analyzing anomalous data related to building energy consumption. Your insights are invaluable in resolving this issue.\\n\\n\" \\","#              f\"Item: {Target}\\n\" \\","#              f\"Date: {date}\\n\" \\","#              f\"Energy Consumption Value: {value} kWh\\n\" \\","#              f\"Anomaly Score: {score}\\n\\n\" \\","#                      f\"Please provide the following:\\n\\n\" \\","#              f\"1. Brief summary of the anomaly, including how the energy consumption value deviates from normal patterns.\\n\\n\" \\","#              f\"2. Analysis of possible causes for the anomaly.\\n\" \\","#              f\"3. Steps for further investigation.\\n\" \\","#              f\"4. Recommended methods to address and resolve the issue.\\n\\n\" \\","#              f\"Your suggestions should be detailed and specific to effectively address the anomaly.\"","    ","                ","#             # 建立 Bedrock 客戶端","#             bedrock = boto3.client(","#                 service_name='bedrock-runtime'#,","#                 # region_name='us-west-2'","#             )  ","        ","            ","#             # 設置 Bedrock 模型的輸入參數","#             input_data = {","#                 \"modelId\": bedrock_model_id,  # \"cohere.command-text-v14\",","#                 \"contentType\": \"application/json\",","#                 \"accept\": \"*/*\",","#                 \"body\": {","#                     \"prompt\": prompt,","#                     \"max_tokens\": 1000,","#                     \"temperature\": 0.75,","#                     \"p\": 0.01,","#                     \"k\": 0,","#                     \"stop_sequences\": [],","#                     \"return_likelihoods\": \"NONE\"","#                 }","#             }","            ","#             # Call Bedrock model","#             response = bedrock.invoke_model(","#                 body=json.dumps(input_data[\"body\"]),","#                 modelId=input_data[\"modelId\"],","#                 accept=input_data[\"accept\"],","#                 contentType=input_data[\"contentType\"]","#             )","        ","#             # Parse Bedrock response","#             response_body = json.loads(response['body'].read())","#             explanation = response_body['generations'][0]['text']    ","#             print(explanation)","            ","#             return explanation "],"id":1}],[{"start":{"row":73,"column":33},"end":{"row":74,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":74,"column":0},"end":{"row":75,"column":0},"action":"insert","lines":["",""]},{"start":{"row":75,"column":0},"end":{"row":76,"column":0},"action":"insert","lines":["",""]},{"start":{"row":76,"column":0},"end":{"row":77,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":76,"column":0},"end":{"row":77,"column":0},"action":"remove","lines":["",""],"id":3}],[{"start":{"row":76,"column":0},"end":{"row":89,"column":0},"action":"insert","lines":["    You are an energy analyst assistant. Your task is to analyze weekly energy consumption data from a CSV file and generate a succinct weekly energy usage report. The report should include:","        ","    1. A summary of the total energy consumption for the week, compared to the previous week and the 4-week average.","    2. Identification of any abnormal usage patterns, such as significant spikes or drops in consumption on particular days.","    3. Potential reasons for abnormal patterns, such as weather events, operational changes, faulty equipment, etc. Provide relevant recommendations to address any issues.","    4. Energy usage highlights, such as days with highest/lowest consumption, top consuming facilities, etc.","    5. Forecasts for energy needs in the upcoming week based on historical data and known factors.","        ","    Here is the weekly energy consumption data in JSON format:","        ","    {json_output}","    ","    Please generate the weekly energy usage report based on the data provided, following the guidelines outlined above. Keep the report concise, focused and insightful.",""],"id":4}],[{"start":{"row":88,"column":168},"end":{"row":89,"column":0},"action":"insert","lines":["",""],"id":5},{"start":{"row":89,"column":0},"end":{"row":89,"column":4},"action":"insert","lines":["    "]},{"start":{"row":89,"column":4},"end":{"row":90,"column":0},"action":"insert","lines":["",""]},{"start":{"row":90,"column":0},"end":{"row":90,"column":4},"action":"insert","lines":["    "]},{"start":{"row":90,"column":4},"end":{"row":91,"column":0},"action":"insert","lines":["",""]},{"start":{"row":91,"column":0},"end":{"row":91,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":91,"column":4},"end":{"row":91,"column":30},"action":"insert","lines":["# 'anthropic.claude-v2:1' "],"id":6}],[{"start":{"row":91,"column":30},"end":{"row":92,"column":0},"action":"insert","lines":["",""],"id":7},{"start":{"row":92,"column":0},"end":{"row":92,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":92,"column":4},"end":{"row":92,"column":115},"action":"insert","lines":[" # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-function-s3.html"],"id":8}],[{"start":{"row":92,"column":115},"end":{"row":93,"column":0},"action":"insert","lines":["",""],"id":9},{"start":{"row":93,"column":0},"end":{"row":93,"column":5},"action":"insert","lines":["     "]}],[{"start":{"row":93,"column":5},"end":{"row":93,"column":154},"action":"insert","lines":["# More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction"],"id":10}],[{"start":{"row":93,"column":154},"end":{"row":94,"column":0},"action":"insert","lines":["",""],"id":11},{"start":{"row":94,"column":0},"end":{"row":94,"column":5},"action":"insert","lines":["     "]}],[{"start":{"row":94,"column":5},"end":{"row":94,"column":135},"action":"insert","lines":["# More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api"],"id":12}]]},"ace":{"folds":[],"scrolltop":1044.9999940395357,"scrollleft":0,"selection":{"start":{"row":84,"column":49},"end":{"row":84,"column":49},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":73,"state":"start","mode":"ace/mode/text"}},"timestamp":1716088181845}